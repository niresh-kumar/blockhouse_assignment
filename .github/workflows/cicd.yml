name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t trade-api:latest .

      - name: Deploy to EC2 via SSH
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "EC2_HOST: $EC2_HOST"  # Debug
          echo "$EC2_SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem

          # Create a tarball excluding .git
          tar --exclude='.git' -czf app.tar.gz .

          # Copy tarball to EC2
          scp -o StrictHostKeyChecking=no -i ssh_key.pem app.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/

          # SSH and deploy
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            # Ensure directory exists
            mkdir -p /home/$EC2_USER/blockhouse_assignments
            cd /home/$EC2_USER/blockhouse_assignments

            # Extract tarball, overwriting existing files
            tar -xzf /home/$EC2_USER/app.tar.gz --overwrite

            # Clean up
            rm /home/$EC2_USER/app.tar.gz

            # Deploy with Docker Compose
            docker-compose down
            docker-compose up --build -d
          EOF

          rm ssh_key.pem